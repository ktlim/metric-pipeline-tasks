description: Compute metrics from matched catalogs
tasks:
  matchCatalogs: MatchedCatalogs.MatchedCatalogTask
  PA1:
    class: MatchedCatalogsAnalysis.MatchedCatalogAnalysisTask
    config:
      connections.package: validate_drp
      connections.metric: PA1
      python: |
        from MeasureTasks import PA1Task
        config.measure.retarget(PA1Task)
  AM1:
    class: MatchedCatalogsAnalysis.MatchedCatalogAnalysisTask
    config:
      connections.package: validate_drp
      connections.metric: AM1
      python: |
        from MeasureTasks import AMxTask
        config.measure.retarget(AMxTask)
        config.measure.annulus_r = 5.0
  AM2:
    class: MatchedCatalogsAnalysis.MatchedCatalogAnalysisTask
    config:
      connections.package: validate_drp
      connections.metric: AM2
      python: |
        from MeasureTasks import AMxTask
        config.measure.retarget(AMxTask)
        config.measure.annulus_r = 20.0
  AM3:
    class: MatchedCatalogsAnalysis.MatchedCatalogAnalysisTask
    config:
      connections.package: validate_drp
      connections.metric: AM3
      python: |
        from MeasureTasks import AMxTask
        config.measure.retarget(AMxTask)
        config.measure.annulus_r = 200.0
  TE1:
    class: MatchedCatalogsAnalysis.MatchedCatalogAnalysisTask
    config:
      connections.package: validate_drp
      connections.metric: TE1
      python: |
        from MeasureTasks import TExTask
        config.measure.retarget(TExTask)
        config.measure.annulus_r = 1.0
        config.measure.comparison_operator = "<="
  TE2:
    class: MatchedCatalogsAnalysis.MatchedCatalogAnalysisTask
    config:
      connections.package: validate_drp
      connections.metric: TE2
      python: |
        from MeasureTasks import TExTask
        config.measure.retarget(TExTask)
        config.measure.annulus_r = 5.0
        config.measure.comparison_operator = ">="
  nsrcMeas:
    class: MatchedCatalogsAnalysis.MatchedCatalogAnalysisTask
    config:
      connections.package: info
      connections.metric: nsrcMeas
      python: |
        from MeasureTasks import NumSourcesTask
        config.measure.retarget(NumSourcesTask)
  agg_mean_PA1:
    class: MatchedCatalogsAggregation.MatchedCatalogsAggregationTask
    config:
      connections.package: validate_drp
      connections.metric: PA1
      connections.agg_name: Mean
  agg_mean_AM1:
    class: MatchedCatalogsAggregation.MatchedCatalogsAggregationTask
    config:
      connections.package: validate_drp
      connections.metric: AM1
      connections.agg_name: Mean
  agg_mean_AM2:
    class: MatchedCatalogsAggregation.MatchedCatalogsAggregationTask
    config:
      connections.package: validate_drp
      connections.metric: AM2
      connections.agg_name: Mean
  agg_mean_AM3:
    class: MatchedCatalogsAggregation.MatchedCatalogsAggregationTask
    config:
      connections.package: validate_drp
      connections.metric: AM3
      connections.agg_name: Mean
  agg_median_PA1:
    class: MatchedCatalogsAggregation.MatchedCatalogsAggregationTask
    config:
      connections.package: validate_drp
      connections.metric: PA1
      connections.agg_name: Median
  agg_mean_TE1:
    class: MatchedCatalogsAggregation.MatchedCatalogsAggregationTask
    config:
      connections.package: validate_drp
      connections.metric: TE1
      connections.agg_name: Mean
  agg_mean_TE2:
    class: MatchedCatalogsAggregation.MatchedCatalogsAggregationTask
    config:
      connections.package: validate_drp
      connections.metric: TE2
      connections.agg_name: Mean
  agg_sum_nsrc:
    class: MatchedCatalogsAggregation.MatchedCatalogsAggregationTask
    config:
      connections.package: info
      connections.metric: nsrcMeas
      connections.agg_name: Sum
